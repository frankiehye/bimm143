---
title: "Class 16: Analyzing sequencing data in the cloud"
author: "Hyeseung (Frankie) Son PID: A16025601"
format: html
editor: visual
---
# Downstream analysis

Back on our laptop we can now use R and Bioconductor tools to further explore this large scale dataset.

There's an R function called tximport() in the tximport package, which enables import of Kallisto results

With each sample having its own directory containing the Kallisto output, we can import the transcript count estimates into R using:

```{r warning=FALSE}
library(tximport)
library(rhdf5)

# setup the folder and filenames to read
folders <- dir(pattern="SRR21568*")
samples <- sub("_quant", "", folders)
files <- file.path( folders, "abundance.h5" )
names(files) <- samples

txi.kallisto <- tximport(files, type = "kallisto", txOut = TRUE)
```

```{r}
head(txi.kallisto$counts)
```
Here's the estimated transcript counts for each sample in R. We see how many transcripts in each sample:

```{r}
colSums(txi.kallisto$counts)
```

And how many transcripts are detected in at least one sample:

```{r}
sum(rowSums(txi.kallisto$counts)>0)
```

Before subsequent analysis, let's filter out annotated transcripts with no reads:

```{r}
to.keep <- rowSums(txi.kallisto$counts) > 0
kset.nonzero <- txi.kallisto$counts[to.keep,]
```

And those with no change over the samples:

```{r}
keep2 <- apply(kset.nonzero,1,sd)>0
x <- kset.nonzero[keep2,]
```

## Principal Component Analysis

Let's perform a PCA of the transcriptomic profiles of these samples. We'll compute the principal components, centering and scaling each transcriptâ€™s measured levels so that each feature contributes equally to the PCA:

```{r}
pca <- prcomp(t(x), scale=TRUE)

summary(pca)
```

Use the first two principal components as a co-ordinate system for visualizing the summarized transcriptomic profiles of each sample:

```{r}
plot(pca$x[,1], pca$x[,2],
     col=c("blue","blue","red","red"),
     xlab="PC1", ylab="PC2", pch=16)
```

> Q. Use ggplot to make a similar figure of PC1 vs PC2 and a seperate figure PC1 vs PC3 and PC2 vs PC3.

```{r}
library(ggplot2)
library(ggrepel)

# Make metadata object for the samples
colData <- data.frame(condition = factor(rep(c("control", "treatment"), each = 2)))
rownames(colData) <- colnames(txi.kallisto$counts)

# Make the data.frame for ggplot 
y <- as.data.frame(pca$x)
y$Condition <- as.factor(colData$condition)

ggplot(y) +
  aes(PC1, PC2, col=Condition) +
  geom_point() +
  geom_text_repel(label=rownames(y)) +
  theme_bw() +
  labs(title = "PC2 versus PC1")

ggplot(y) +
  aes(PC1, PC3, col=Condition) +
  geom_point() +
  geom_text_repel(label=rownames(y)) +
  theme_bw() +
  labs(title = "PC3 versus PC1")

ggplot(y) +
  aes(PC2, PC3, col=Condition) +
  geom_point() +
  geom_text_repel(label=rownames(y)) +
  theme_bw() + 
  labs(title = "PC3 versus PC2")
```

The plot makes clear: 

- PC1 separates control samples (SRR2156848 and SRR2156849) from the two enhancer-targeting CRISPR-Cas9 samples (SRR2156850 and SRR2156851). 
- PC2 separates the two control samples from each other.
- PC3 separates the two enhancer-targeting CRISPR samples from each other.